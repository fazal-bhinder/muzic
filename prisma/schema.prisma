// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(cuid())
  email     String  @unique
  provider  Provider 
  streams   Stream[]
  upvotes   Upvote[] 
}

model Stream{
  id          String  @id @default(cuid())
  type        StreamType
  active      Boolean @default(true)
  userId      String
  title       String  @default("")
  smallImg    String  @default("")
  bigImg      String  @default("")
  url         String
  extractedId String
  upvotes     Upvote[] 
  user        User    @relation(fields: [userId], references: [id])
  currentStream CurrentStream?
} 

model CurrentStream{
  userId      String @id 
  streamId    String? @unique
  stream      Stream?  @relation(fields: [streamId], references: [id]) 
}

model Upvote{
  id          String  @id @default(cuid())
  userId      String
  streamId    String  @unique
  user        User    @relation(fields: [userId], references: [id])
  streamer    Stream @relation(fields: [streamId], references: [id], onDelete: Cascade)
  @@unique([userId, streamId])
}

enum StreamType{
  Spotify
  Youtube
}

enum Provider {
  GOOGLE
}